// MONGODB COMMANDS SPRINT 2. CREATE A DATABASE

// ------------------------------------------------ Create ----------------------------------------------------------------- //

// Create a database named manage_proyects

use manage_proyects

// Create the collection proyectos with one register

db.proyectos.insertOne(
  { 
    id: ObjectId(), 
    name: 'proyecto 01', 
    descripcion: 'Descripción proyecto 01', 
    presupuesto: 2000000,
    objetivo_general: "objetivo proyecto 01", 
    objetivos_especificos: ["objetivos especificos 1", "Objetivo especifico 2"], fecha_inicial: new Date("2021-09-15"), 
    fecha_final: new Date("2022-09-15"), 
    usuarios:["6142a29e9ccf4eba5637dfaa"], 
    reporte_avance: [
      { 
        id: ObjectId(), 
        usuarios_id: ["6142a29e9ccf4eba5637dfaa"], 
        reporte: "reporte 1", 
        estado: "inicio", 
        fase: "inicio", 
        createdAt: new Date("2021-09-15"), 
        updatedAt: new Date("2021-09-15") 
      }
    ], 
    createdAt: new Date("2021-09-15"), 
    updatedAt: new Date("2021-09-15"),
	  estado: 'Terminado'
  }
)

// Insert many proyects

db.proyectos.insertMany([
  { id: ObjectId(), name: 'proyecto 02', descripcion: 'Descripción proyecto 02', presupuesto: 3000000,objetivo_general: "objetivo proyecto 02", objetivos_especificos: ["objetivos especificos 2.0", "Objetivo especifico 2.1"], fecha_inicial: new Date("2021-09-15"), fecha_final: new Date("2022-09-15"), usuarios:["6142a29e9ccf4eba5637dfaa"], reporte_avance: [{ id: ObjectId(), usuarios_id: ["6142a29e9ccf4eba5637dfaa"],  reporte: "reporte 2", estado: "inicio", fase: "inicio", createdAt: new Date("2021-09-15"), updatedAt: new Date("2021-09-15")}], createdAt: new Date("2021-09-15"), updatedAt: new Date("2021-09-15"), estado: 'Terminado' },
  { id: ObjectId(), name: 'proyecto 03', descripcion: 'Descripción proyecto 03', presupuesto: 2000000,objetivo_general: "objetivo proyecto 03", objetivos_especificos: ["objetivos especificos 3.0", "Objetivo especifico 3.1"], fecha_inicial: new Date("2021-09-15"), fecha_final: new Date("2022-09-15"), usuarios:["6142a29e9ccf4eba5637dfaa"], reporte_avance: [{ id: ObjectId(), usuarios_id: ["6142a29e9ccf4eba5637dfaa"],  reporte: "reporte 3", estado: "inicio", fase: "inicio", createdAt: new Date("2021-09-15"), updatedAt: new Date("2021-09-15")}], createdAt: new Date("2021-09-15"), updatedAt: new Date("2021-09-15"), estado: 'Terminado' },
])

// Create the collection usuarios with one register

db.usuarios.insertOne(
  {
    id: ObjectId(),
    rol: "Estudiante",
    nombre: "Claudia Ortiz",
    carrera: "Ingeniería de sistemas",
    celular: 3123456789,
    fecha_ingreso: new Date("2021-09-15"),
    createdAt: new Date("2021-09-15"),
    updatedAt: new Date("2021-09-15"),
  }
)

// Insert many usuarios

db.usuarios.insertMany([
  { id: ObjectId(), rol: "Director", nombre: "Claudia Ortiz", carrera: "Ingeniería mecánica", celular: 3123456789, fecha_ingreso: new Date("2021-09-15"), createdAt: new Date("2021-09-15"), updatedAt: new Date("2021-09-15")},
  { id: ObjectId(), rol: "Estudiante", nombre: "Pepito perez", carrera: "Ingeniería mecánica", celular: 3198765432, fecha_ingreso: new Date("2021-09-15"), createdAt: new Date("2021-09-15"), updatedAt: new Date("2021-09-15")},
])

// ------------------------------------------------ Read ----------------------------------------------------------------- //

// Show all the existing collections in the database

show collections

// Show all records in collection (max 20)

db.usuarios.find() 
db.proyectos.find()

// Return the user record with the name corresponding to the one searched

db.usuarios.find({nombre: "Claudia Ortiz"})
db.proyectos.find({objetivo_general: "objetivo proyecto 01"})

// Return the first record that matches

db.usuarios.findOne()
db.proyectos.findOne()

// Return the first user that matches the characteristics

db.usuarios.findOne({celular: 3123456789, carrera: "Ingeniería de sistemas"})
db.proyectos.findOne({descripcion: "descripcion proyecto 01", nombre: "proyecto 01"}) 

// Modifies a single document

db.usuarios.findAndModify({ query: { rol: "Estudiante" }, update: {$set: { rol: "Director"}}, new: true })
db.proyectos.findAndModify({ query: { name: "proyecto 01" } , update: {$set: { objetivo_general: "Nuevo objetivo general"}}, new: true })


// ------------------------------------------------ Update ----------------------------------------------------------------- //

//Update a single proyects collection document based on a simple query

db.proyectos.updateOne({name: 'proyecto 01'}, {$set: {objetivo_general: "nuevo objetivo"}})

//Update many proyects collection documents based on a simple query

db.proyectos.updateMany({estado: 'Terminado'}, {$set: {estado: "Inicial"}})

//Update a single usuarios collection based on a complex query

db.usuarios.updateOne({$or: [{rol: 'Estudiante'}, {rol: 'Director'}]}, {$set: {carrera: 'Ingeniería mecánica'}})

//Update many usuarios collections based on a complex query

db.usuarios.updateMany({$or: [{carrera: 'Ingeniería mecánica'}, {carrera: 'Ingeniería de sistemas'}]}, {$set: {rol: 'Estudiante'}})

// ------------------------------------------------ Delete ----------------------------------------------------------------- //

// Delete first register that fount by filter
db.proyectos.deleteOne( { name: 'proyecto 01' } )

// Delete all register that match with the query
db.proyectos.deleteMany( { estado: 'Terminado' } )

// Delete all documents on collection
db.proyectos.deleteMany( {} )

// ------------------------------------------------ Join ----------------------------------------------------------------- //

// Query using join using aggregation funtion.

db.proyectos.aggregate([
 { 
   $lookup: {
     from : "usuarios",
     localField : " usuarios",
     foreignField : "_id",
     as : "usuarios_proyectos"
   }
 },
 {$match: {"usuarios_proyectos.rol":"estudiante"}
 }])

 db.proyectos.aggregate([
 { 
   $lookup: {
     from : "usuarios",
     localField : "reporte_avance.usuarios_id",
     foreignField : "_id",
     as : "usuarios_reportes"
   }
 },
  {$match: {"reporte_avance.estado":"inicio"}
 }
 ])
